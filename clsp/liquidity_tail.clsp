; liquidity TAIL - allows mint by singleton; announces when burned
; author: yakuhito

; used as the TAIL of a pair's liquidity CAT

(mod (
      ; pair / controller SINGLETON_STRUCT
      SINGLETON_STRUCT  ; to quote did_innerpuz.clvm, 
            ;; 'my singleton_struct, formerly a Truth - ((SINGLETON_MOD_HASH, (LAUNCHER_ID, LAUNCHER_PUZZLE_HASH)))'
      Truths
      parent_is_cat
      lineage_proof
      delta
      inner_conditions
      tail_solution ; (singleton_info [my_amount])
        ;; singleton_info = (parent_id inner_puzzle_hash amount)
        ;; [my_amount] = number; only required if burning (delta is negative)
    )

    (include condition_codes.clvm)
    (include curry.clinc)
    (include cat_truths.clib)

    ; curry-and-treehash.clinc
    ;; which can't be included in the same file as curry.clinc
    (defconstant b32 32)

    (defun-inline size_b32 (var)
        (= (strlen var) b32)
    )

    (defun calculate_coin_id (parent puzzlehash amount)
        (if (all (size_b32 parent) (size_b32 puzzlehash) (> amount -1))
            (sha256 parent puzzlehash amount)
            (x)
        )
    )
    ; end curry-and-treehash.clinc

    ; tail_solution is (singleton_inner_puzzle_hash conditions)
    (defun-inline singleton_info_from_solution (tail_solution) (f tail_solution))
    (defun-inline my_amount_from_solution (tail_solution) (f (r tail_solution)))

    (defun-inline parent_id_from_singleton_info (singleton_info) (f singleton_info))
    (defun-inline inner_puzzle_hash_from_singleton_info (singleton_info) (f (r singleton_info)))
    (defun-inline amount_from_singleton_info (singleton_info) (f (r (r tail_solution))))

    ; SINGLETON_STRUCT
    (defun-inline singleton_mod_hash_from_struct (singleton_struct) (f singleton_struct))
    (defun-inline singleton_launcher_from_struct (singleton_struct) (f (r singleton_struct)))
    (defun-inline singleton_launcher_puzzle_hash_from_struct (singleton_struct) (f (r (r singleton_struct))))
    

    ; https://github.com/Chia-Network/chia-blockchain/blob/main/chia/wallet/puzzles/did_innerpuz.clvm#L56
    (defun-inline calculate_full_puzzle_hash (inner_puzzle_hash)
        (curry_hashes_inline (singleton_mod_hash_from_struct SINGLETON_STRUCT)
            SINGLETON_STRUCT
            inner_puzzle_hash
        )
    )

    (defun-inline calculate_singleton_coin_id (singleton_info)
        (calculate_coin_id
            (parent_id_from_singleton_info singleton_info)
            (calculate_full_puzzle_hash
                (inner_puzzle_hash_from_singleton_info singleton_info)
            )
            (amount_from_singleton_info singleton_info)
        )
    )

    (defun-inline main (
        singleton_info
        tail_solution
    )
        (if (not parent_is_cat)
            ; verify parent
            (if (= delta 0)
                (list
                    (list ASSERT_MY_PARENT_ID (calculate_singleton_coin_id singleton_info))
                )
                ; else
                (x)
            )
            ; else - burn
            (if (= delta (- 0 (amount_from_singleton_info tail_solution)))
                (list
                    (list ASSERT_MY_AMOUNT (amount_from_singleton_info tail_solution))
                    (list
                        ASSERT_COIN_ANNOUNCEMENT
                        (calculate_singleton_coin_id singleton_info)
                        (sha256 (amount_from_singleton_info tail_solution))
                    )
                    (list CREATE_COIN_ANNOUNCEMENT 'Y')
                )
                ; else
                (x)
            )
        )
    )

    ; main
    (main
        (singleton_info_from_solution tail_solution)
        tail_solution
    )
)
