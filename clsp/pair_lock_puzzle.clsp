; inner puzzle for pair-owned CATs and XCH
;; they can only be unlocked by the pair singleton
(mod
    (
        SINGLETON_MOD_HASH
        LAUNCHER_ID
        LAUNCHER_PUZZLE_HASH
        singleton_inner_puzzle_hash
        target_puzzle_hash
        target_amount
        my_info ; (my_amount my_puzzle_hash)
    )

    (include condition_codes.clvm)

    (defun-inline my_amount_from_info info (f info))
    (defun-inline my_puzzle_hash_from_info info (f (r info)))

    ; https://github.com/Chia-Network/chia-blockchain/blob/main/chia/wallet/puzzles/did_innerpuz.clvm#L56
    (defun-inline calculate_full_puzzle_hash (SINGLETON_MOD_HASH LAUNCHER_ID LAUNCHER_PUZZLE_HASH inner_puzzle_hash)
        (puzzle-hash-of-curried-function SINGLETON_MOD_HASH
            inner_puzzle_hash
            (sha256tree (c SINGLETON_MOD_HASH (c LAUNCHER_ID LAUNCHER_PUZZLE_HASH)))
        )
    )

    (defun-inline assert_singleton_announcement_condidion data
        (list
            ASSERT_PUZZLE_ANNOUNCEMENT
            (sha256
                (calculate_full_puzzle_hash
                    SINGLETON_MOD_HASH
                    LAUNCHER_ID LAUNCHER_PUZZLE_HASH
                    singleton_inner_puzzle_hash
                )
                data
            )
        )
    )

    (defun-inline main my_amount
        (if (> my_amount target_amount)
            (list
                (assert_singleton_announcement_condidion (list target_puzzle_hash target_amount))
                (list ASSERT_MY_AMOUNT my_amount)
                (list ASSERT_MY_PUZZLE_HASH (my_puzzle_hash_from_info my_info))

                (list CREATE_COIN_ANNOUNCEMENT 'yak')
                (list CREATE_COIN target_puzzle_hash target_amount)
                (list CREATE_COIN (my_puzzle_hash_from_info my_info) (- my_amount target_amount))
            )
            ; else
            (if = my_amount target_amount
                (list
                    (assert_singleton_announcement_condidion (list target_puzzle_hash target_amount))
                    (list ASSERT_MY_AMOUNT my_amount)
                    
                    (list CREATE_COIN_ANNOUNCEMENT 'yak')
                    (list CREATE_COIN target_puzzle_hash my_amount)
                )
                ; else
                (x)
            )
        )
    )

    (main (my_amount_from_info my_info))
)